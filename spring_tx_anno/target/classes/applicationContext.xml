<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--1.加载jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--基本原则：自定义的bean 使用注解， 第三方的bean使用xml配置-->
    <!--2.配置数据源对象-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--组件扫描-->
    <context:component-scan base-package="com.bingo.learn.tx"/>

    <!--<bean id="accountDao" class="com.bingo.learn.tx.dao.impl.AccountDaoImpl">-->
    <!--    <property name="jdbcTemplate" ref="jdbcTemplate"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;目标对象，内部方法transfer就是切点&ndash;&gt;-->
    <!--<bean id="accountService" class="com.bingo.learn.tx.service.impl.AccountServiceImpl">-->
    <!--    <property name="accountDao" ref="accountDao"/>-->
    <!--</bean>-->

    <!--配置平台事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入dataSource transactionManager会从中获取connection 进行事务控制-->
        <property name="dataSource" ref="druidDataSource"/>
    </bean>
    <!--&lt;!&ndash;配置通知 事务的增强&ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--    &lt;!&ndash;设置事务属性信息&ndash;&gt;-->
    <!--    <tx:attributes>-->
    <!--        &lt;!&ndash;哪些方法被增强&ndash;&gt;-->
    <!--        <tx:method name="transfer" isolation="REPEATABLE_READ" propagation="REQUIRED" timeout="-1" read-only="false"/>-->
    <!--    </tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash;配置事务的aop织入&ndash;&gt;-->
    <!--<aop:config>-->
    <!--    &lt;!&ndash;advisor 是 spring专门为事务增强定义的 ，其他的用aspect&ndash;&gt;-->
    <!--    <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.bingo.learn.service.impl.*.*(..))"/>-->
    <!--</aop:config>-->
    <!--事务控制的注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>